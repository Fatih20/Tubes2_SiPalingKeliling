<Window
    x:Class="Avalonia.TreasureFinder.Views.MainWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:Avalonia.TreasureFinder.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:Avalonia.TreasureFinder.ViewModels"
    Title="TreasureFinder"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Background="Transparent"
    Icon="/Assets/avalonia-logo.ico"
    TransparencyLevelHint="AcrylicBlur"
    mc:Ignorable="d">

    <Design.DataContext>
        <!--
            This only sets the DataContext for the previewer in an IDE,
            to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs)
        -->
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <Window.Styles>
        <Style Selector="TextBlock.error-text">
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="Blue" />

        </Style>
    </Window.Styles>
    <Panel>
        <ExperimentalAcrylicBorder IsHitTestVisible="False">
            <ExperimentalAcrylicBorder.Material>
                <ExperimentalAcrylicMaterial
                    BackgroundSource="Digger"
                    MaterialOpacity="0.65"
                    TintColor="Black"
                    TintOpacity="1" />
            </ExperimentalAcrylicBorder.Material>
        </ExperimentalAcrylicBorder>

        <Grid>
            <Image Source="{SvgImage /Assets/pause.svg}" />
            <Grid
                Margin="10,10,10,10"
                HorizontalAlignment="Center"
                RowDefinitions="*, Auto">
                <!--  <Border  -->
                <!--  Grid.Row="1"  -->
                <!--  HorizontalAlignment="Center"  -->
                <!--  BorderBrush="#FFFFFF"  -->
                <!--  BorderThickness="0">  -->
                <Grid ColumnDefinitions="Auto, Auto, Auto, Auto">
                    <Grid.Styles>
                        <!--  General style  -->
                        <Style Selector="Border.tab-wrapper">
                            <Setter Property="Margin" Value="20, 0, 20, 0" />
                        </Style>
                        <Style Selector="Grid.tab">
                            <Setter Property="Margin" Value="5" />
                        </Style>
                        <Style Selector="Border">
                            <Setter Property="Height" Value="20" />
                            <Setter Property="Background" Value="#1C1C1E" />
                        </Style>
                        <!--  Behaviour of hovering style  -->
                        <Style Selector="Border:pointerover">
                            <Setter Property="Height" Value="100" />
                        </Style>
                        <Style Selector="Border:pointerover &gt; Grid">
                            <Setter Property="Height" Value="40" />
                        </Style>
                        <Style Selector="Border &gt; Grid">
                            <Setter Property="Height" Value="0" />
                        </Style>
                        <!--  Differentiate between hidden and open  -->
                        <Style Selector="Border.open">
                            <Setter Property="Height" Value="100" />
                        </Style>
                        <Style Selector="Border.hidden">
                            <Setter Property="IsVisible" Value="False" />
                        </Style>
                        <Style Selector="Border.open &gt; Grid">
                            <Setter Property="Height" Value="40" />
                        </Style>
                    </Grid.Styles>

                    <Border
                        Grid.Column="0"
                        VerticalAlignment="Bottom"
                        BorderBrush="#1C1C1E"
                        BorderThickness="0"
                        Classes="tab-wrapper"
                        Classes.hidden="{Binding InputBarIsHidden}"
                        Classes.open="{Binding InputBarIsOpen}"
                        CornerRadius="7">
                        <Grid
                            Width="400"
                            Classes="tab"
                            ColumnDefinitions="Auto, Auto"
                            RowDefinitions="*">
                            <Button>fvdmfdkvmdlvkml</Button>
                        </Grid>
                    </Border>
                    <Border
                        Grid.Column="1"
                        Padding="5,5,5,5"
                        VerticalAlignment="Bottom"
                        BorderBrush="#1C1C1E"
                        BorderThickness="0"
                        Classes="tab-wrapper"
                        Classes.hidden="{Binding ResultBarIsHidden}"
                        Classes.open="{Binding ResultBarIsOpen}"
                        CornerRadius="7">
                        <Grid
                            Width="200"
                            Classes="tab"
                            ColumnDefinitions="Auto, Auto"
                            RowDefinitions="*">
                            <Button>fvdmfdkvmdlvkml</Button>
                        </Grid>
                    </Border>
                    <Border
                        Grid.Column="2"
                        Padding="5,5,5,5"
                        VerticalAlignment="Bottom"
                        BorderBrush="#1C1C1E"
                        BorderThickness="0"
                        Classes="tab-wrapper"
                        Classes.hidden="{Binding ReplayBarIsHidden}"
                        Classes.open="{Binding ReplayBarIsOpen}"
                        CornerRadius="7">
                        <Grid
                            Width="200"
                            Classes="tab"
                            ColumnDefinitions="Auto, Auto"
                            RowDefinitions="*">
                            <Button>fvdmfdkvmdlvkml</Button>
                        </Grid>
                    </Border>
                    <Border
                        Grid.Column="3"
                        Padding="5,5,5,5"
                        VerticalAlignment="Bottom"
                        BorderBrush="#1C1C1E"
                        BorderThickness="0"
                        Classes="tab-wrapper"
                        CornerRadius="7">
                        <Grid
                            Width="50"
                            Classes="tab"
                            ColumnDefinitions="Auto, Auto"
                            RowDefinitions="*">
                            <Button Command="{Binding ToggleAllBarHidden}">fvdmfdkvmdlvkml</Button>

                        </Grid>
                    </Border>
                </Grid>
                <!-- </Border> -->
            </Grid>
        </Grid>

        <!-- <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top"> -->
        <!--    -->
        <!--  ~1~  IsVisible="{Binding ShowError}"  @1@  -->
        <!--  <TextBlock  -->
        <!--  HorizontalAlignment="Center"  -->
        <!--  Classes="error-text"  -->
        <!--  IsVisible="True"  -->
        <!--  Text="{Binding ExceptionMessage}" />  -->
        <!--    -->
        <!--     <Button Height="40"> -->
        <!--         <Image Source="{SvgImage /Assets/pause.svg}" /> -->
        <!--     </Button> -->
        <!--  <Button  -->
        <!--  HorizontalAlignment="Left"  -->
        <!--  Command="{Binding ButtonClicked}"  -->
        <!--  Content="{Binding State}" />  -->
        <!--  <Button  -->
        <!--  HorizontalAlignment="Left"  -->
        <!--  Command="{Binding ButtonClicked}"  -->
        <!--  Content="{Binding State}">  -->
        <!--         ~1~ <PathIcon Data="{StaticResource play_regular}" /> @1@ -->
        <!--     </Button> -->
        <!--  <Button  -->
        <!--  HorizontalAlignment="Left"  -->
        <!--  Command="{Binding ButtonClicked}"  -->
        <!--  Content="{Binding State}" />  -->
        <!--    -->
        <!-- </StackPanel> -->
    </Panel>

</Window>
